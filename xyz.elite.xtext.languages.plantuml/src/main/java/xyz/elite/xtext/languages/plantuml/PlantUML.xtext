grammar xyz.elite.xtext.languages.plantuml.PlantUML with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate plantUML "http://www.elite.xyz/xtext/languages/plantuml/PlantUML"

Model:
    ('SEQUENCE' sequence_diagrams+=SQ_Diagram)*;

SQ_Diagram:
    {SQ_Diagram}
    DIAGRAM_START (elements+=SQ_SequenceElement)* DIAGRAM_END;

// ---------------------------
//      SEQUENCE ELEMENTS
// ---------------------------
SQ_SequenceElement:
    SQ_Message 
    | SQ_EntityDefiniton
    | SQ_Delay;

SQ_Message:
    sender=SQ_Entity arrow=SQ_Arrow receiver=SQ_Entity (':' (content=PT_RequestResponse | words+=Word)+)?;

SQ_EntityDefiniton:
    ('actor'|'boundary'|'control'|'entity'|'database'|'participant') entity=SQ_Entity ('as' alias=PUMLID)? (color=COLOR)?;

SQ_Delay:
    {SQ_Delay}
    '...' wait=PT_Wait (':' (words+=Word)+)? '...';

SQ_Entity:
    (name=PUMLID|name=STRING);
        
SQ_Arrow:
    '-'? '->' | '<-' '-'?;

// ----------------------------
//   PLANTESTIC MODIFICATIONS
// ----------------------------
PT_Wait:
    'wait(' time=INT unit=('ns'|'ms'|'s'|'min'|'h'|'d') ')';

PT_RequestResponse:
    Request | Response;

Request returns RequestResponse:
    {Request}
    method=REQUEST_METHOD url=STRING ('(' param+=Parameter (',' param+=Parameter)* ')')?;

Response returns RequestResponse:
    {Response}
    code+=INT (',' code+=INT)* ('-' '(' param+=Parameter (',' param+=Parameter)* ')')?;

Parameter:
    {Parameter}
    name=PUMLID ':' value=STRING;

// ----------------------------
//      LEXER/PARSER ATOMS
// ----------------------------
Word returns ecore::EString:
    INT | STRING | PUMLID | ANY_OTHER;

terminal REQUEST_METHOD:
    'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';
    
terminal DIAGRAM_START:
    '@startuml';

terminal DIAGRAM_END:
    '@enduml';

terminal PUMLID:
    ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;

terminal COLOR:
    '#' (('a'..'f'|'A'..'F'|'0'..'9')('a'..'f'|'A'..'F'|'0'..'9')('a'..'f'|'A'..'F'|'0'..'9')
        (('a'..'f'|'A'..'F'|'0'..'9')('a'..'f'|'A'..'F'|'0'..'9')('a'..'f'|'A'..'F'|'0'..'9'))?);

@Override
terminal STRING:
    '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"';

@Override
terminal SL_COMMENT:
    "'" !('\n'|'\r')* ('\r'? '\n')?;

@Override
terminal ML_COMMENT:
    "/'" -> "'/";